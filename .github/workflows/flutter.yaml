name: Build & Release Desktop Apps

on:
  release:
    types: [published]
  workflow_dispatch:
    

jobs:
  build:
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        os: [ubuntu-22.04, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from pubspec.yaml
        id: version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | sed 's/version: //' | cut -d'+' -f1)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Get Flutter version from pubspec.yaml
        id: flutter_version
        run: |
          FLUTTER_VERSION=$(grep 'flutter:' pubspec.yaml | head -1 | awk '{print $2}' | tr -d '^"')
          echo "flutter_version=$FLUTTER_VERSION" >> $GITHUB_OUTPUT


      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.flutter_version.outputs.flutter_version }}

      - name: Get dependencies
        run: flutter pub get

      - name: Build
        run: |
          if [ ${{ matrix.os }} = ubuntu-22.04 ]; then
            sudo apt-get update
            sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
            flutter build linux --release
            cd build/linux/x64/release/bundle
            tar -cJf ../../../../randyv2_v${{ steps.version.outputs.version }}_linux_x64.tar.xz ./*
          elif [ ${{ matrix.os }} = windows-latest ]; then
            choco install zip
            flutter build windows --release
            cd build/windows/x64/runner/Release
            zip -r ../../../../randyv2_v${{ steps.version.outputs.version }}_windows_x64.zip ./*
          elif [ ${{ matrix.os }} = macos-latest ]; then
            npm install -g appdmg
            flutter build macos --release
            sudo codesign -s - --force --deep --timestamp --options runtime "build/macos/Build/Products/Release/Randy in Flutter.app"
            appdmg installers/dmg_creator/config.json build/randyv2_v${{ steps.version.outputs.version }}_macos_x64.dmg
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: randyinflutter-${{ matrix.os }}-build
          path: |
            build/randyv2*.zip
            build/randyv2*.tar.xz
            build/randyv2*.dmg
            
      - name: Get latest release tag
        id: tag
        run: |
          TAG=$(gh release list --limit 1 --json tagName --jq '.[0].tagName')
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          files: |
            build/randyv2_v${{ steps.version.outputs.version }}_linux_x64.tar.xz
            build/randyv2_v${{ steps.version.outputs.version }}_windows_x64.zip
            build/randyv2_v${{ steps.version.outputs.version }}_macos_x64.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
